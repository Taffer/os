In [0] upstream moved to upb as the default protobuf implementation.  With
`USE_PYWRAP_RULES=True` set, `bazel` can't even find targets to build, and with
`upb` left as the default implementation, the build fails.

[0] https://github.com/tensorflow/tensorflow/commit/724f36e00941ad3abf3c32209adc2ee186602b70

Author: Daniel Watkins <daniel.watkins@chainguard.dev>
--
diff --git a/.bazelrc b/.bazelrc
index 46f2ee94..1f30e4d8 100644
--- a/.bazelrc
+++ b/.bazelrc
@@ -90,12 +90,12 @@ build --define=allow_oversize_protos=true
 build --spawn_strategy=standalone
 build -c opt
 
-build --repo_env=USE_PYWRAP_RULES=True
+#build --repo_env=USE_PYWRAP_RULES=True
 build --copt=-DGRPC_BAZEL_BUILD
 build --host_copt=-DGRPC_BAZEL_BUILD
 build --action_env=GRPC_BAZEL_RUNTIME=1
-build --repo_env=PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=upb
-build --action_env=PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=upb
+build --repo_env=PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=cpp
+build --action_env=PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=cpp
 build --repo_env=RULES_PYTHON_ENABLE_PYSTAR=0
 
 # Do not do this. If enabled protobuf's core internal target 
