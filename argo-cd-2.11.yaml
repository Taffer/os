package:
  name: argo-cd-2.11
  version: 2.11.6
  epoch: 1
  description: Declarative continuous deployment for Kubernetes.
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - argo-cd=${{package.full-version}}

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - go
      - nodejs-20
      - python3
      - yarn

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/argoproj/argo-cd
      tag: v${{package.version}}
      expected-commit: 089247df0f15e64813d00a2d1271a2095feecad4

  - uses: patch
    with:
      patches: tls-cipher-removed.patch

  - uses: go/bump
    with:
      deps: github.com/cloudflare/circl@v1.3.7 golang.org/x/net@v0.23.0 github.com/hashicorp/go-retryablehttp@v0.7.7 github.com/rs/cors@v1.11.0 k8s.io/kubernetes@v1.27.16 sigs.k8s.io/controller-runtime@v0.15.3
      replaces: k8s.io/api=k8s.io/api@v0.27.16 k8s.io/apiextensions-apiserver=k8s.io/apiextensions-apiserver@v0.27.16 k8s.io/apimachinery=k8s.io/apimachinery@v0.27.16 k8s.io/apiserver=k8s.io/apiserver@v0.27.16 k8s.io/cli-runtime=k8s.io/cli-runtime@v0.27.16 k8s.io/client-go=k8s.io/client-go@v0.27.16 k8s.io/cloud-provider=k8s.io/cloud-provider@v0.27.16 k8s.io/cluster-bootstrap=k8s.io/cluster-bootstrap@v0.27.16 k8s.io/code-generator=k8s.io/code-generator@v0.27.16 k8s.io/component-base=k8s.io/component-base@v0.27.16 k8s.io/component-helpers=k8s.io/component-helpers@v0.27.16 k8s.io/controller-manager=k8s.io/controller-manager@v0.27.16 k8s.io/cri-api=k8s.io/cri-api@v0.27.16 k8s.io/csi-translation-lib=k8s.io/csi-translation-lib@v0.27.16 k8s.io/dynamic-resource-allocation=k8s.io/dynamic-resource-allocation@v0.27.16 k8s.io/kms=k8s.io/kms@v0.27.16 k8s.io/kube-aggregator=k8s.io/kube-aggregator@v0.27.16 k8s.io/kube-controller-manager=k8s.io/kube-controller-manager@v0.27.16 k8s.io/kube-proxy=k8s.io/kube-proxy@v0.27.16 k8s.io/kube-scheduler=k8s.io/kube-scheduler@v0.27.16 k8s.io/kubectl=k8s.io/kubectl@v0.27.16 k8s.io/kubelet=k8s.io/kubelet@v0.27.16 k8s.io/legacy-cloud-providers=k8s.io/legacy-cloud-providers@v0.27.16 k8s.io/metrics=k8s.io/metrics@v0.27.16 k8s.io/mount-utils=k8s.io/mount-utils@v0.27.16 k8s.io/pod-security-admission=k8s.io/pod-security-admission@v0.27.16 k8s.io/sample-apiserver=k8s.io/sample-apiserver@v0.27.16 k8s.io/sample-cli-plugin=k8s.io/sample-cli-plugin@v0.27.16 k8s.io/sample-controller=k8s.io/sample-controller@v0.27.16

  - runs: |
      cd ui
      yarn install
      yarn cache clean
      NODE_ENV='production' NODE_ONLINE_ENV='online' NODE_OPTIONS=--max_old_space_size=8192 yarn build

      cd ..

      # Our global LDFLAGS conflict with a Makefile parameter
      unset LDFLAGS
      # Our global `-pie` flag results in a binary that cannot be copied to a non chainguard image
      # Disable the `-pie` flag here since ArgoCD's helm charts like to copy around the multicall binary to different images (ie: dex)

      unset GOFLAGS

      make argocd-all

      mkdir -p ${{targets.destdir}}/usr/bin
      mv dist/argocd* ${{targets.destdir}}/usr/bin/

      ln -s /usr/bin/argocd ${{targets.destdir}}/usr/bin/argocd-server
      ln -s /usr/bin/argocd ${{targets.destdir}}/usr/bin/argocd-repo-server
      ln -s /usr/bin/argocd ${{targets.destdir}}/usr/bin/argocd-cmp-server
      ln -s /usr/bin/argocd ${{targets.destdir}}/usr/bin/argocd-application-controller
      ln -s /usr/bin/argocd ${{targets.destdir}}/usr/bin/argocd-notifications
      ln -s /usr/bin/argocd ${{targets.destdir}}/usr/bin/argocd-applicationset-controller
      ln -s /usr/bin/argocd ${{targets.destdir}}/usr/bin/argocd-k8s-auth

  - uses: strip

subpackages:
  - name: ${{package.name}}-repo-server
    description: "ArgoCD repo server"
    dependencies:
      runtime:
        - ${{package.name}}-compat
        - git
        - git-lfs
        - gnupg
        - gpg
        - gpg-agent
        - tzdata
        - helm
        - kustomize
        - openssh
      provides:
        - argo-cd-repo-server=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          cp hack/gpg-wrapper.sh "${{targets.subpkgdir}}"/usr/bin/gpg-wrapper.sh
          cp hack/git-verify-wrapper.sh "${{targets.subpkgdir}}"/usr/bin/git-verify-wrapper.sh

  - name: ${{package.name}}-compat
    description: "Compatibility package for locating binaries according to upstream helm charts"
    pipeline:
      - runs: |
          # ArgoCD manifests and helm charts all hardcode the executables path to /usr/local/bin/*
          mkdir -p "${{targets.subpkgdir}}"/usr/local/bin
          # This must be copied and not symlinked due to how `argocd` copies executables between (init)containers
          # example: https://github.com/argoproj/argo-helm/blob/argo-cd-5.33.1/charts/argo-cd/templates/dex/deployment.yaml#L136-L143
          cp ${{targets.destdir}}/usr/bin/argocd "${{targets.subpkgdir}}"/usr/local/bin/argocd

          ln -s /usr/local/bin/argocd "${{targets.subpkgdir}}"/usr/local/bin/argocd-server
          ln -s /usr/local/bin/argocd "${{targets.subpkgdir}}"/usr/local/bin/argocd-repo-server
          ln -s /usr/local/bin/argocd "${{targets.subpkgdir}}"/usr/local/bin/argocd-cmp-server
          ln -s /usr/local/bin/argocd "${{targets.subpkgdir}}"/usr/local/bin/argocd-application-controller
          ln -s /usr/local/bin/argocd "${{targets.subpkgdir}}"/usr/local/bin/argocd-notifications
          ln -s /usr/local/bin/argocd "${{targets.subpkgdir}}"/usr/local/bin/argocd-applicationset-controller
          ln -s /usr/local/bin/argocd "${{targets.subpkgdir}}"/usr/local/bin/argocd-k8s-auth
    dependencies:
      provides:
        - argo-cd-compat=${{package.full-version}}

update:
  enabled: true
  github:
    identifier: argoproj/argo-cd
    strip-prefix: v
    tag-filter: v2.11.

test:
  pipeline:
    - name: ArgoCD Version Check
      runs: |
        argocd version --short --client || exit 1
